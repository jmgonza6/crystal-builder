.TH "INTERFACE" 3 "Tue Sep 29 2015" "Crystal Builder v 3.7.0" \" -*- nroff -*-
.ad l
.nh
.SH NAME
INTERFACE \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.SH "\fBPurpose:\fP "
.PP
.PP
.PP
.nf
/*****************************************************************************\
/  Class which constructs all of the core routines needed to build a crystal. \
/  Specifically, the Gui class, LATTICE class, and the Write class are all    \
/  constructed when this class is constructed.  This class serves to access   \
/  the data from Gui and send it to the LATTICE and Write classes.            \
/*****************************************************************************\
.fi
.PP
.PP
\fBAuthor:\fP
.RS 4
Joseph M\&. Gonzalez
.RE
.PP
\fBVersion:\fP
.RS 4
0\&.2
.RE
.PP
\fBDate:\fP
.RS 4
Sep 13, 2015 19:16:20
.RE
.PP
\fBContact\fP 
.br
 jmgonza6@mail.usf.edu 
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBINTERFACE\fP (int nargs, char **argv, const char *fptr)"
.br
.RI "\fIConstructor to start up all core level classes\&. \fP"
.ti -1c
.RI "\fB~INTERFACE\fP ()"
.br
.RI "\fIDestructor to free all memory allocated for the core classes\&. \fP"
.ti -1c
.RI "void \fBshow_parameters\fP ()"
.br
.RI "\fIDisplay all the parameters entered by the user during the GUI session\&. \fP"
.ti -1c
.RI "void \fBbuild\fP ()"
.br
.RI "\fIStore all the parameters and build the required crystal\&. 
.br
This is where each of the specific Bravais lattices are instantiated as an 
.br
object of the \fBLATTICE\fP class\&. \fP"
.ti -1c
.RI "void \fBbuild_from_file\fP ()"
.br
.RI "\fIStore all the parameters and build the required crystal\&. 
.br
This is where each of the specific Bravais lattices are instantiated as an 
.br
object of the \fBLATTICE\fP class\&. \fP"
.ti -1c
.RI "void \fBwrite_data\fP (int src)"
.br
.RI "\fI\fBWrite\fP the as built crystal to a regular file\&. 
.br
This method accesses the requested file format and passes all the necessary data for that format\&. \fP"
.ti -1c
.RI "int \fBinsane\fP ()"
.br
.RI "\fISimple sanity check to ensure all necessary parameters have been defined \&.
.br
 If a required parameter was not set, then a detailed message on the missing parameter
.br
 is printed to the terminal via \fB\fCstderr\fP\fP\&. \fP"
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBspecies\fP"
.br
.RI "\fIcontainer to hold each element string defined by the user \fP"
.ti -1c
.RI "\fBGui\fP * \fBgui\fP"
.br
.RI "\fIpointer to the gui class \fP"
.ti -1c
.RI "\fBLATTICE\fP * \fBlattice\fP"
.br
.RI "\fIpointer to the lattice class, each Bravais crystal inherits from \fBLATTICE\fP \fP"
.ti -1c
.RI "\fBWrite\fP * \fBwrite\fP"
.br
.RI "\fIpointer to the write class, used for writing specific formats \fP"
.ti -1c
.RI "\fBErrors\fP * \fBerrors\fP"
.br
.ti -1c
.RI "\fBParser\fP * \fBparser\fP"
.br
.ti -1c
.RI "\fBReader\fP * \fBreader\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBmenu\fP ()"
.br
.RI "\fIGuide the user through an interactive command line menu to define the crystal parameters\&. 
.br
Marked deprecated as of v 0\&.3! \fP"
.ti -1c
.RI "void \fBbanner\fP ()"
.br
.RI "\fIDisplay program info at the command line\&. \fP"
.ti -1c
.RI "void \fBinput\fP (char *fptr)"
.br
.RI "\fIRead the atomic configuration from a text file\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBi_alat\fP"
.br
.ti -1c
.RI "double \fBi_cta\fP"
.br
.ti -1c
.RI "int \fBlclass\fP"
.br
.ti -1c
.RI "int \fBlstyle\fP"
.br
.ti -1c
.RI "int \fBi_lorient\fP"
.br
.ti -1c
.RI "int \fBi_species\fP"
.br
.ti -1c
.RI "std::string \fBatom_list\fP"
.br
.ti -1c
.RI "char * \fBoformat\fP"
.br
.ti -1c
.RI "char * \fBformat\fP"
.br
.ti -1c
.RI "char * \fBfname\fP"
.br
.ti -1c
.RI "char * \fBstylename\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "INTERFACE::INTERFACE (int nargs, char ** argv, const char * fptr)"

.PP
Constructor to start up all core level classes\&. 
.PP
\fBParameters:\fP
.RS 4
\fInargs\fP - number of command line arguments 
.br
\fIargv\fP - char array containing all command line arguments 
.br
\fIfptr\fP - name of parameters file to read from 
.RE
.PP

.SS "INTERFACE::~INTERFACE ()"

.PP
Destructor to free all memory allocated for the core classes\&. 
.SH "Member Function Documentation"
.PP 
.SS "void INTERFACE::banner ()\fC [private]\fP"

.PP
Display program info at the command line\&. 
.SS "void INTERFACE::build ()"

.PP
Store all the parameters and build the required crystal\&. 
.br
This is where each of the specific Bravais lattices are instantiated as an 
.br
object of the \fBLATTICE\fP class\&. 
.SS "void INTERFACE::build_from_file ()"

.PP
Store all the parameters and build the required crystal\&. 
.br
This is where each of the specific Bravais lattices are instantiated as an 
.br
object of the \fBLATTICE\fP class\&. 
.SS "void INTERFACE::input (char * fptr)\fC [private]\fP"

.PP
Read the atomic configuration from a text file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfptr\fP - Filename of the configuration file 
.RE
.PP

.SS "int INTERFACE::insane ()"

.PP
Simple sanity check to ensure all necessary parameters have been defined \&.
.br
 If a required parameter was not set, then a detailed message on the missing parameter
.br
 is printed to the terminal via \fB\fCstderr\fP\fP\&. 
.PP
\fBReturns:\fP
.RS 4
\fC0\fP if successful, \fC1\fP otherwise 
.RE
.PP

.SS "void INTERFACE::menu ()\fC [private]\fP"

.PP
Guide the user through an interactive command line menu to define the crystal parameters\&. 
.br
Marked deprecated as of v 0\&.3! 
.SS "void INTERFACE::show_parameters ()"

.PP
Display all the parameters entered by the user during the GUI session\&. 
.SS "void INTERFACE::write_data (int src)"

.PP
\fBWrite\fP the as built crystal to a regular file\&. 
.br
This method accesses the requested file format and passes all the necessary data for that format\&. 
.SH "Field Documentation"
.PP 
.SS "std::string INTERFACE::atom_list\fC [private]\fP"

.SS "\fBErrors\fP* INTERFACE::errors"

.SS "char* INTERFACE::fname\fC [private]\fP"

.SS "char* INTERFACE::format\fC [private]\fP"

.SS "\fBGui\fP* INTERFACE::gui"

.PP
pointer to the gui class 
.SS "double INTERFACE::i_alat\fC [private]\fP"

.SS "double INTERFACE::i_cta\fC [private]\fP"

.SS "int INTERFACE::i_lorient\fC [private]\fP"

.SS "int INTERFACE::i_species\fC [private]\fP"

.SS "\fBLATTICE\fP* INTERFACE::lattice"

.PP
pointer to the lattice class, each Bravais crystal inherits from \fBLATTICE\fP 
.SS "int INTERFACE::lclass\fC [private]\fP"

.SS "int INTERFACE::lstyle\fC [private]\fP"

.SS "char* INTERFACE::oformat\fC [private]\fP"

.SS "\fBParser\fP* INTERFACE::parser"

.SS "\fBReader\fP* INTERFACE::reader"

.SS "std::vector<std::string> INTERFACE::species"

.PP
container to hold each element string defined by the user 
.SS "char* INTERFACE::stylename\fC [private]\fP"

.SS "\fBWrite\fP* INTERFACE::write"

.PP
pointer to the write class, used for writing specific formats 

.SH "Author"
.PP 
Generated automatically by Doxygen for Crystal Builder v 3\&.7\&.0 from the source code\&.
